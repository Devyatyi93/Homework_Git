https://github.com/Devyatyi93

GIT Homework 1

TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер. === git clone https://github.com/Devyatyi93/TXT.git
 3. Внутри локального TXT создать файл “new.txt”. ===cd ./TXT  потом === touch new.txt
 4. Добавить файл под гит. === git add new.txt
 5. Закоммитить файл. === git commit -m "add file new.txt"
 6. Отправить файл на внешний GitHub репозиторий. === git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. === cat >> new.txt
Девяткин Илья Алексеевич
28 лет
Домашних животных нет
40000

и CTRL+c

 8. Отправить изменения на внешний репозиторий. === git add . далее git commit -m "add info in file new.txt" далее  git push
 9. Создать файл preferences.txt === touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. === vim preferences.txt добавил инфу ===:wq
Киновселенная MARVEL
Breaking Bad
Картошка по французки
Лето
Америкa 

11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT === cat > skills.txt далее добавляю инфу 
gitHub
sql
python
devtools
postman

и CTRL+c

 12. Сделать коммит в одну строку. === git add  далее === git commit -m "add file preferences.txt and skills.txt"
 13. Отправить сразу 2 файла на внешний репозиторий. === git push
 14. На веб интерфейсе создать файл bug_report.txt. === переходим на GitHub в наш репозиторий, кликаем Addfile, создаем файл bug_report.txt, комментируем "Create bug_report.txt"
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === кликаем по CommitNewFile

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. === открываем файл bug_report.txt === добавляю баг_репорт
1. Описание: Приложение закрывается при делении на ноль
2. Проект: Калькулятор
3. Версия билда: 0.4
4. Severity: Blocker
5. Priority: High
6. Автор: Илья
7. Окружение: Windows 10 pro x64

 === комментирую update bug_report.txt

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.=== кликаю по Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT === git pull


JSON
 4. Создать внешний репозиторий c названием JSON.
 5. Клонировать репозиторий JSON на локальный компьютер. === git clone https://github.com/Devyatyi93/JSON.git
 6. Внутри локального JSON создать файл “new.json”.=== cd JSON === touch new.json 
 7. Добавить файл под гит. === git add .
 8. Закоммитить файл. === git commit -m "add file new.json"
 9. Отправить файл на внешний GitHub репозиторий. === git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. === vim new.json довавляю инфу
{
	"name":"Девяткин_Илья_Алексеевич",
	"age":28,
	"pets":"Null",
	"salary":40000
}
 :wq

 11. Отправить изменения на внешний репозиторий. === git add new.json далее git commit -m "add info new.json" далее git push
 12. Создать файл preferences.json === touch preferences.json
 
13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. === vim preferences.json
{
	"film":"Мстители",
	"series":"Во все тяжкие",
	"food":"any",
	"season":"summer",
	"the_country":"USA"
}
:wq

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON === touch skills.json === vim skills.json
{
	"skills": [ "git_hub", "devtools", "postman", "sql", "python"]
}
:wq
 
15. Отправить сразу 2 файла на внешний репозиторий. === git add . === git commit -m "add file preferences.json and skills.json" === git push
 16. На веб интерфейсе создать файл bug_report.json.  === переходим на GitHub в наш репозиторий, кликаем Addfile, создаем файл bug_report.json, комментируем "Create bug_report.json"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.  === кликаем по CommitNewFile
 
18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. === открываем файл bug_report.json === добавляю баг_репорт
{
  "project":"калькулятор",
  "title":"Приложение_закрывается_при_делении_на_ноль",
  "severity":"blocker",
  "str": ["ввести_любое_число", "поделить_на_ноль"],
  "actual_result":"приложение_закрывается",
  "expected_result":"приложение_выдает_ошибку",
  "author":"Илья",
  "version": "0.4",
  "environment":"windows10_pro_x64"
}

 === комментирую update bug_report.json
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === кликаю по Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON === git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер. === git clone https://github.com/Devyatyi93/XML.git
 23. Внутри локального XML создать файл “new.xml”. === cd XML === touch new.xml
 24. Добавить файл под гит. === git add new.xml
 25. Закоммитить файл. === git commit -m "add file new.xml"
 26. Отправить файл на внешний GitHub репозиторий. === git push
 
27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. ===vim new.xml
<?xml version="1.0" encoding="UTF-8" ?>
<person>
	<name>Девяткин_Илья_Алексеевич</name>
	<age>28</age>
	<pets>Null</pets>
	<salary>40000</salary>
</person>
:wq
 
28. Отправить изменения на внешний репозиторий. === git add . ==== git commit -m "add info new.xml" === git push
 29. Создать файл preferences.xml === touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.=== vim preferences.xml
<?xml version="1.0" encoding="UTF-8" ?>
<person>
	<film>Мстители</film>
	<series>Во_все_тяжкие</series>
	<food>any</food>
	<season>summer</season>
	<the_country>USA</the_country>
</person>
:wq
 
31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML === touch skills.xml === vim skills.xml
<?xml version="1.0" encoding="UTF-8" ?>
<skills>
	<skill_1>github</skill_1>
	<skill_2>python</skill_2>
	<skill_3>sql</skill_3>
	<skill_4>devtools</skill_4>
	<skill_5>postman</skill_5>
	<skill_6>charles</skill_6>
</skills>
:wq

 32. Сделать коммит в одну строку. === git add. === git commit -m "add file preferences.xml and skills.xml
 33. Отправить сразу 2 файла на внешний репозиторий. === git push
 34. На веб интерфейсе создать файл bug_report.xml. === переходим на GitHub в наш репозиторий, кликаем Addfile, создаем файл bug_report.xml, комментируем "Create bug_report.xml"
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. === кликаем по CommitNewFile
 
36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. === открываем файл bug_report.xml === добавляю баг_репорт 
<?xml version="1.0" encoding="UTF-8" ?>
<bug_report>
  <project>Калькулятор</project>
  <title>Приложение закрывается при делении на ноль</title>
  <severity>blocker</severity>
  <str>
    <str1>ввести любое число</str1>
    <str2>поделить на ноль</str2>
  </str>
  <expected_result>приложение выдает ошибку, но продолжает работать</expected_result>
  <author>Илья</author>
  <version>0.4</version>
  <enviroment>windows 10 pro x64</enviroment>
</bug_report>
=== комментирую update bug_report.xml
 
37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.=== кликаем по CommitNewFile
 38. Синхронизировать внешний и локальный репозиторий XML === git pull

